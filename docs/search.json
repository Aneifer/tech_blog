[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Hey, ich bin Anna Neifer",
    "section": "",
    "text": "Hey, ich bin Anna Neifer\nIch bin Data Scientist und Journalistin. Ich habe unter anderem Wirtschaftswissenschaften mit Informatikanteil studiert. Für meinen Master bin ich durch Neuseeland gereist und habe eine Videodokumentation über junge Māori produziert. Nach meinem Volontariat beim Westdeutschen Rundfunk, habe ich als Reporterin und Redakteurin in verschiedenen Redaktionen gearbeitet. Einer meiner Schwerpunkte liegt im Bereich Investigation. Im Jahr 2023 habe ich angefangen, mir selbst programmieren beizubringen und habe danach verschiedene Kurse für Python und Data Science besucht.\n\n\nÜber diesen Blog\nIn diesem Blog schreibe ich über meinen Lernprozess in den Bereichen Python, Data Science und Machine Learning. Ich teile Einblicke, Herausforderungen und Erkenntnisse aus meinen Projekten und erkläre, wie ich Künstliche Intelligenz in meiner Arbeit nutze. Mein Ziel ist es, komplexe Themen verständlich aufzubereiten und Wissen weiterzugeben."
  },
  {
    "objectID": "posts/warum-python/index.html",
    "href": "posts/warum-python/index.html",
    "title": "Warum ich angefangen habe, Python zu lernen",
    "section": "",
    "text": "Sprachen sind Schlüssel, mit denen sich Türen zu verborgenen Welten öffnen lassen. In meiner Arbeit als Journalistin, habe ich immer wieder an der Schnittstelle von Innovation, Recherche und Technologie gearbeitet. Und dabei bin ich an meine Grenzen gestoßen. Deswegen habe ich mir zunächst nebenbei Python beigebracht. Es war im wahrsten Sinne des Wortes Code, den ich knacken wollte. Das ist der Ausgangspunkt meiner Reise gewesen, in die Welt von Objekten, Funktionen und Variablen.\n\n\nTechnologie hat mich schon lange fasziniert: Die Möglichkeit, eigene digitale Ideen realisieren zu können und Probleme durch Code zu lösen. Als Data-Journalistin habe ich an investigativen Projekten gearbeitet, darunter die Recherche zum Attentäter von Henriette Reker oder das Projekt Tatort Rechts. Mit Python habe ich Einblick in eine Sprache erlangt, die nicht nur in der Softwareentwicklung, sondern auch in der Datenanalyse und im Journalismus vielfältig einsetzbar ist. Die Verbindung von Code und investigativer Recherche eröffnet neue, spannende Möglichkeiten.\n\n\n\nIch habe mich intensiv mit verschiedenen Programmiersprachen beschäftigt und mich letztlich für Python entschieden. Das sind die Gründe: - Lesbarkeit und Einfachheit: Python ist bekannt für seine klare und leicht verständliche Syntax. Der Code ist intuitiv und leicht zu verstehen, was besonders für Einsteiger attraktiv ist. - Vielseitigkeit: Python findet Anwendung in Webentwicklung, Datenanalyse, künstlicher Intelligenz und vielem mehr. Diese Vielseitigkeit ermöglicht es, unterschiedlichste Projekte umzusetzen. - Große Community: Eine aktive Gemeinschaft bedeutet viele Ressourcen und Unterstützung für Anfänger. Veranstaltungen wie die PyCon, die ich 2024 besucht habe, haben mir Gelegenheiten zum Austausch und zur Weiterbildung gegeben. - Beliebtheit: Python gehört zu den beliebtesten Programmiersprachen weltweit, derzeit laut TIOBE Index auf Platz 1.\n\n\n\n\nPython ist eine universelle, höhere Programmiersprache, die Anfang der 1990er Jahre von Guido van Rossum entwickelt wurde. Sie zeichnet sich durch ihre einfache Syntax und Lesbarkeit aus. Python unterstützt mehrere Programmierparadigmen, darunter die objektorientierte, die aspektorientierte und die funktionale Programmierung. Besonderheiten von Python Einheitliche Formatierung: Anstelle von geschweiften Klammern oder Schlüsselwörtern zur Blockbildung setzt Python auf Einrückungen. Dies fördert einen übersichtlichen und gut lesbaren Code. Dynamische Typisierung: In Python müssen Variablen nicht explizit deklariert werden. Der Datentyp einer Variablen wird zur Laufzeit basierend auf dem zugewiesenen Wert bestimmt. Das bedeutet, dass man einer Variablen zunächst eine Zahl und später einen Text zuweisen kann, ohne einen Fehler zu verursachen. Diese Flexibilität beschleunigt die Entwicklung und macht den Code anpassungsfähiger. Umfangreiche Standardbibliothek: Python bietet eine breite Palette an Modulen und Bibliotheken für verschiedene Anwendungsbereiche, von Webentwicklung über Datenanalyse bis hin zu maschinellem Lernen. Plattformunabhängigkeit: Python-Programme können auf verschiedenen Betriebssystemen wie Windows, macOS und Linux ausgeführt werden, ohne Änderungen am Code vornehmen zu müssen.\n\n\n\nPython unterstützt verschiedene Programmierparadigmen, die unterschiedliche Ansätze zur Strukturierung und Organisation von Code bieten: Objektorientierte Programmierung (OOP): In der OOP werden Programme in Objekte unterteilt, die sowohl Daten als auch die darauf operierenden Methoden kapseln. Dies fördert die Wiederverwendbarkeit und Modularität des Codes. Funktionale Programmierung: Dieser Ansatz betont die Verwendung von reinen Funktionen, die keine Seiteneffekte haben und den Programmzustand nicht verändern. Dies führt zu vorhersehbarem und leicht testbarem Code. Aspektorientierte Programmierung (AOP): AOP ermöglicht es, Querschnittsbelange wie Logging oder Fehlerbehandlung modular zu behandeln, ohne den Hauptcode zu verunreinigen.\n\n\n\nAuf Github habe ich ein paar meiner Projekte hochgeladen, die sind hier zu finden: https://github.com/Aneifer."
  },
  {
    "objectID": "posts/warum-python/index.html#interesse-für-technologie",
    "href": "posts/warum-python/index.html#interesse-für-technologie",
    "title": "Warum ich angefangen habe, Python zu lernen",
    "section": "",
    "text": "Technologie hat mich schon lange fasziniert: Die Möglichkeit, eigene digitale Ideen realisieren zu können und Probleme durch Code zu lösen. Als Data-Journalistin habe ich an investigativen Projekten gearbeitet, darunter die Recherche zum Attentäter von Henriette Reker oder das Projekt Tatort Rechts. Mit Python habe ich Einblick in eine Sprache erlangt, die nicht nur in der Softwareentwicklung, sondern auch in der Datenanalyse und im Journalismus vielfältig einsetzbar ist. Die Verbindung von Code und investigativer Recherche eröffnet neue, spannende Möglichkeiten."
  },
  {
    "objectID": "posts/warum-python/index.html#warum-ich-mich-für-python-entschieden-habe",
    "href": "posts/warum-python/index.html#warum-ich-mich-für-python-entschieden-habe",
    "title": "Warum ich angefangen habe, Python zu lernen",
    "section": "",
    "text": "Ich habe mich intensiv mit verschiedenen Programmiersprachen beschäftigt und mich letztlich für Python entschieden. Das sind die Gründe: - Lesbarkeit und Einfachheit: Python ist bekannt für seine klare und leicht verständliche Syntax. Der Code ist intuitiv und leicht zu verstehen, was besonders für Einsteiger attraktiv ist. - Vielseitigkeit: Python findet Anwendung in Webentwicklung, Datenanalyse, künstlicher Intelligenz und vielem mehr. Diese Vielseitigkeit ermöglicht es, unterschiedlichste Projekte umzusetzen. - Große Community: Eine aktive Gemeinschaft bedeutet viele Ressourcen und Unterstützung für Anfänger. Veranstaltungen wie die PyCon, die ich 2024 besucht habe, haben mir Gelegenheiten zum Austausch und zur Weiterbildung gegeben. - Beliebtheit: Python gehört zu den beliebtesten Programmiersprachen weltweit, derzeit laut TIOBE Index auf Platz 1."
  },
  {
    "objectID": "posts/warum-python/index.html#was-ist-python",
    "href": "posts/warum-python/index.html#was-ist-python",
    "title": "Warum ich angefangen habe, Python zu lernen",
    "section": "",
    "text": "Python ist eine universelle, höhere Programmiersprache, die Anfang der 1990er Jahre von Guido van Rossum entwickelt wurde. Sie zeichnet sich durch ihre einfache Syntax und Lesbarkeit aus. Python unterstützt mehrere Programmierparadigmen, darunter die objektorientierte, die aspektorientierte und die funktionale Programmierung. Besonderheiten von Python Einheitliche Formatierung: Anstelle von geschweiften Klammern oder Schlüsselwörtern zur Blockbildung setzt Python auf Einrückungen. Dies fördert einen übersichtlichen und gut lesbaren Code. Dynamische Typisierung: In Python müssen Variablen nicht explizit deklariert werden. Der Datentyp einer Variablen wird zur Laufzeit basierend auf dem zugewiesenen Wert bestimmt. Das bedeutet, dass man einer Variablen zunächst eine Zahl und später einen Text zuweisen kann, ohne einen Fehler zu verursachen. Diese Flexibilität beschleunigt die Entwicklung und macht den Code anpassungsfähiger. Umfangreiche Standardbibliothek: Python bietet eine breite Palette an Modulen und Bibliotheken für verschiedene Anwendungsbereiche, von Webentwicklung über Datenanalyse bis hin zu maschinellem Lernen. Plattformunabhängigkeit: Python-Programme können auf verschiedenen Betriebssystemen wie Windows, macOS und Linux ausgeführt werden, ohne Änderungen am Code vornehmen zu müssen."
  },
  {
    "objectID": "posts/warum-python/index.html#programmierparadigmen-in-python",
    "href": "posts/warum-python/index.html#programmierparadigmen-in-python",
    "title": "Warum ich angefangen habe, Python zu lernen",
    "section": "",
    "text": "Python unterstützt verschiedene Programmierparadigmen, die unterschiedliche Ansätze zur Strukturierung und Organisation von Code bieten: Objektorientierte Programmierung (OOP): In der OOP werden Programme in Objekte unterteilt, die sowohl Daten als auch die darauf operierenden Methoden kapseln. Dies fördert die Wiederverwendbarkeit und Modularität des Codes. Funktionale Programmierung: Dieser Ansatz betont die Verwendung von reinen Funktionen, die keine Seiteneffekte haben und den Programmzustand nicht verändern. Dies führt zu vorhersehbarem und leicht testbarem Code. Aspektorientierte Programmierung (AOP): AOP ermöglicht es, Querschnittsbelange wie Logging oder Fehlerbehandlung modular zu behandeln, ohne den Hauptcode zu verunreinigen."
  },
  {
    "objectID": "posts/warum-python/index.html#projekte-auf-github",
    "href": "posts/warum-python/index.html#projekte-auf-github",
    "title": "Warum ich angefangen habe, Python zu lernen",
    "section": "",
    "text": "Auf Github habe ich ein paar meiner Projekte hochgeladen, die sind hier zu finden: https://github.com/Aneifer."
  },
  {
    "objectID": "posts/tatort-rechts/index.html#gezielte-suchen",
    "href": "posts/tatort-rechts/index.html#gezielte-suchen",
    "title": "Tatort Rechts: Open Source Recherche-Tool",
    "section": "Gezielte Suchen",
    "text": "Gezielte Suchen\nSeit dem Jahr 2000 sind auf den 13 Projekt-Webseiten zusammen mehr als 16.000 Fälle registriert worden, die einen rechten, rassistischen oder antisemitischen Bezug haben. Nun können Userinnen zum einen nach Fällen auf der Karte suchen und sich in ihr Bundesland bis zu ihrer Stadt reinzoomen. Zum anderen können Benutzerinnen über eine Suchleiste anhand von Schlagworten filtern, nach bestimmten Namen oder Taten suchen. Mit erweiterten Suchfiltern kann die Suche weiter eingegrenzt werden."
  },
  {
    "objectID": "posts/tatort-rechts/index.html#zusammenhänge-sehen",
    "href": "posts/tatort-rechts/index.html#zusammenhänge-sehen",
    "title": "Tatort Rechts: Open Source Recherche-Tool",
    "section": "Zusammenhänge sehen",
    "text": "Zusammenhänge sehen\nIch hoffe, dass es nun durch die visuell ansprechend und filterbar aufbereiteten Daten viel leichter sein wird, Zusammenhänge in den Daten zu erkennen. In den Daten sind Kundgebungen von Pegida oder Veranstaltungen der AfD. Brandanschläge auf Autos von Menschen, die einen Migrationshintergrund haben oder sich für Flüchtlinge einsetzen. Aber auch Todesdrohungen und körperliche Angriffe mit Messern und Waffen."
  },
  {
    "objectID": "posts/tatort-rechts/index.html#daten",
    "href": "posts/tatort-rechts/index.html#daten",
    "title": "Tatort Rechts: Open Source Recherche-Tool",
    "section": "Daten",
    "text": "Daten\nDie verwendeten Daten sind alle schon öffentlich verfügbar. Doch bislang waren sie für eine systematische und einfache Suche nur schwer nutzbar. Allerdings sind die erfassten Daten sehr heterogen. Das bedeutet, eine Vergleichbarkeit ist nicht gegeben. Statistische Analysen sind anhand der Daten nicht möglich. Das ist auch nicht das Ziel dieses Projekts. Mit Tatort Rechts wollen wir es User*innen möglich machen, gezielt die erfassten Vorfälle durchsuchen zu können."
  },
  {
    "objectID": "tech_blog/lib/python3.12/site-packages/seaborn-0.13.2.dist-info/LICENSE.html",
    "href": "tech_blog/lib/python3.12/site-packages/seaborn-0.13.2.dist-info/LICENSE.html",
    "title": "Alles rund um Python, Daten und Künstliche Intelligenz",
    "section": "",
    "text": "Copyright (c) 2012-2023, Michael L. Waskom All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the project nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "tech_blog/lib/python3.12/site-packages/idna-3.10.dist-info/LICENSE.html",
    "href": "tech_blog/lib/python3.12/site-packages/idna-3.10.dist-info/LICENSE.html",
    "title": "Alles rund um Python, Daten und Künstliche Intelligenz",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2013-2024, Kim Davies and contributors. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "tech_blog/lib/python3.12/site-packages/narwhals-1.25.2.dist-info/licenses/LICENSE.html",
    "href": "tech_blog/lib/python3.12/site-packages/narwhals-1.25.2.dist-info/licenses/LICENSE.html",
    "title": "Alles rund um Python, Daten und Künstliche Intelligenz",
    "section": "",
    "text": "MIT License\nCopyright (c) 2024, Marco Gorelli\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "tech_blog/lib/python3.12/site-packages/soupsieve-2.6.dist-info/licenses/LICENSE.html",
    "href": "tech_blog/lib/python3.12/site-packages/soupsieve-2.6.dist-info/licenses/LICENSE.html",
    "title": "Alles rund um Python, Daten und Künstliche Intelligenz",
    "section": "",
    "text": "MIT License\nCopyright (c) 2018 - 2024 Isaac Muse isaacmuse@gmail.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Anna Neifers Blog",
    "section": "",
    "text": "Grafana-Dashboard zur Sonntagsfrage\n\n\n\n\n\n\nPolitik\n\n\nCode\n\n\nGrafana\n\n\n\n\n\n\n\n\n\nFeb 10, 2025\n\n\nAnna Neifer\n\n\n\n\n\n\n\n\n\n\n\n\nWarum ich angefangen habe, Python zu lernen\n\n\n\n\n\n\nProgrammieren\n\n\nCommunity\n\n\nPython\n\n\n\n\n\n\n\n\n\nJan 1, 2025\n\n\nAnna Neifer\n\n\n\n\n\n\n\n\n\n\n\n\nErste Schritte mit Python: Rechner und Zähler\n\n\n\n\n\n\nCode\n\n\nPython\n\n\n\n\n\n\n\n\n\nOct 1, 2023\n\n\nAnna Neifer\n\n\n\n\n\n\n\n\n\n\n\n\nTatort Rechts: Open Source Recherche-Tool\n\n\n\n\n\n\nPolitik\n\n\nOpen Source\n\n\n\n\n\n\n\n\n\nFeb 1, 2021\n\n\nAnna Neifer\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "tech_blog/lib/python3.12/site-packages/numpy/random/LICENSE.html",
    "href": "tech_blog/lib/python3.12/site-packages/numpy/random/LICENSE.html",
    "title": "NCSA Open Source License",
    "section": "",
    "text": "This software is dual-licensed under the The University of Illinois/NCSA Open Source License (NCSA) and The 3-Clause BSD License\n\nNCSA Open Source License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nDeveloped by: Kevin Sheppard (kevin.sheppard@economics.ox.ac.uk, kevin.k.sheppard@gmail.com) http://www.kevinsheppard.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal with the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimers.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimers in the documentation and/or other materials provided with the distribution.\nNeither the names of Kevin Sheppard, nor the names of any contributors may be used to endorse or promote products derived from this Software without specific prior written permission.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.\n\n\n3-Clause BSD License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nComponents\nMany parts of this module have been derived from original sources, often the algorithm’s designer. Component licenses are located with the component code."
  },
  {
    "objectID": "tech_blog/lib/python3.12/site-packages/httpcore-1.0.7.dist-info/licenses/LICENSE.html",
    "href": "tech_blog/lib/python3.12/site-packages/httpcore-1.0.7.dist-info/licenses/LICENSE.html",
    "title": "Alles rund um Python, Daten und Künstliche Intelligenz",
    "section": "",
    "text": "Copyright © 2020, Encode OSS Ltd. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "tech_blog/lib/python3.12/site-packages/httpx-0.28.1.dist-info/licenses/LICENSE.html",
    "href": "tech_blog/lib/python3.12/site-packages/httpx-0.28.1.dist-info/licenses/LICENSE.html",
    "title": "Alles rund um Python, Daten und Künstliche Intelligenz",
    "section": "",
    "text": "Copyright © 2019, Encode OSS Ltd. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "tech_blog/lib/python3.12/site-packages/pyzmq-26.2.1.dist-info/licenses/LICENSE.html",
    "href": "tech_blog/lib/python3.12/site-packages/pyzmq-26.2.1.dist-info/licenses/LICENSE.html",
    "title": "Alles rund um Python, Daten und Künstliche Intelligenz",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2009-2012, Brian Granger, Min Ragan-Kelley\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "posts/erste-schritte-python/index.html#projekt-1-einfache-trinkgeldrechner-app",
    "href": "posts/erste-schritte-python/index.html#projekt-1-einfache-trinkgeldrechner-app",
    "title": "Erste Schritte mit Python: Rechner und Zähler",
    "section": "Projekt 1: Einfache Trinkgeldrechner-App",
    "text": "Projekt 1: Einfache Trinkgeldrechner-App\nEines der ersten Projekt war ein einfacher Trinkgeldrechner, der grundlegende mathematische Operationen durchführen kann.\nbill = 18.80\ntip_percentage = 0.15\ntax_percentage = 0.067\n\ntip = bill * tip_percentage\nprint(f\"Tip: {tip}\")\n\ntax = bill * tax_percentage\nprint(f\"Tax: {tax}\")\n\ntotal = bill + tip + tax\n\nBeispielhafte Nutzung\nprint(f\"Total: {total}\")\nAusgabe: Tip: 2.82 Tax: 1.2596 Total: 22.8796"
  },
  {
    "objectID": "posts/erste-schritte-python/index.html#projekt-2-wortzähler-für-texte",
    "href": "posts/erste-schritte-python/index.html#projekt-2-wortzähler-für-texte",
    "title": "Erste Schritte mit Python: Rechner und Zähler",
    "section": "Projekt 2: Wortzähler für Texte",
    "text": "Projekt 2: Wortzähler für Texte\nEin anderes Projekt war ein Skript, das die Anzahl der Wörter in einem Text zählt.\ndef wortzaehler(text):\n    woerter = text.split()\n    return len(woerter)\n\nBeispielhafte Nutzung\ntext = \"Sein, oder nicht sein, das ist hier die Frage.\"\nprint(wortzaehler(text))\nAusgabe: 9"
  },
  {
    "objectID": "posts/erste-schritte-python/index.html#die-motivation-hinter-den-projekten",
    "href": "posts/erste-schritte-python/index.html#die-motivation-hinter-den-projekten",
    "title": "Erste Schritte mit Python: Rechner und Zähler",
    "section": "Die Motivation hinter den Projekten",
    "text": "Die Motivation hinter den Projekten\nDiese kleinen Projekte haben mir die Möglichkeit gegeben, praktische Probleme zu lösen und mein Wissen anzuwenden. Dadurch habe ich einen Einblick in Python bekommen und mich entschieden, ich möchte noch mehr mit Python arbeiten."
  },
  {
    "objectID": "posts/sonntagsfrage/index.html#was-ist-die-sonntagsfrage",
    "href": "posts/sonntagsfrage/index.html#was-ist-die-sonntagsfrage",
    "title": "Grafana-Dashboard zur Sonntagsfrage",
    "section": "Was ist die Sonntagsfrage?",
    "text": "Was ist die Sonntagsfrage?\nDie sogenannte “Sonntagsfrage” ist ein Instrument der Meinungsforschung. Dabei werden Bürger gefragt, welche Partei sie wählen würden, wenn am kommenden Sonntag Bundestagswahl wäre. Es geht hier also darum, ein Stimmungsbild zu zeichnen und Trends zu erkennen. Für die Wähler, Medien und Politiker sind die Ergebnisse dieser Umfragen von Interesse und können die Strategie des Wahlkampfes beeinflussen."
  },
  {
    "objectID": "posts/sonntagsfrage/index.html#datenquelle-infratest-dimap",
    "href": "posts/sonntagsfrage/index.html#datenquelle-infratest-dimap",
    "title": "Grafana-Dashboard zur Sonntagsfrage",
    "section": "Datenquelle Infratest Dimap",
    "text": "Datenquelle Infratest Dimap\nIch habe die Umfrageanbieter auf wahlrecht.de miteinander verglichen. Für mein Projekt habe ich mich für die Daten von Infratest Dimap entschieden. Zunächst habe ich die Daten in einer Excel-Tabelle gespeichert, die Prozentzeichen entfernt und dann in einem CSV abgelegt."
  },
  {
    "objectID": "posts/sonntagsfrage/index.html#warum-grafana",
    "href": "posts/sonntagsfrage/index.html#warum-grafana",
    "title": "Grafana-Dashboard zur Sonntagsfrage",
    "section": "Warum Grafana?",
    "text": "Warum Grafana?\nGrafana ist ein Open-Source-Tool für die Visualisierung von Daten. Es wird oft für System-Monitoring und Business-Intelligence eingesetzt, aber ich verwende es hier für politische Daten. Gerade wenn es darum geht, langfristige Entwicklungen zu beobachten, bietet Grafana mit seinen Zeitreihen-Visualisierungen eine übersichtliche Lösung."
  },
  {
    "objectID": "posts/sonntagsfrage/index.html#heruasforderung-beim-csv-upload-bei-grafana",
    "href": "posts/sonntagsfrage/index.html#heruasforderung-beim-csv-upload-bei-grafana",
    "title": "Grafana-Dashboard zur Sonntagsfrage",
    "section": "Heruasforderung beim CSV-Upload bei Grafana",
    "text": "Heruasforderung beim CSV-Upload bei Grafana\nGrafana ist vom UX-Design recht übersichtlich. Es lässt sich leicht ein neues Dashboard erstellen. Als ich mein CSV hochgeladen habe, kam zunächst eine Fehlermeldung: “Data is missing a number field”. Beim Debugging stellt sich heraus, dass Grafana die deutsche Datumsschreibweise wie “20.01.2024” nicht erkennt. Mit einem Python-Skript habe ich dann das Datum an das erwartete Format angepasst:\ndf[\"date\"] = pd.to_datetime(df[\"date\"], format=\"%d.%m.%Y\").dt.strftime(\"%Y-%m-%d\")\nAußerdem habe ich vorsichtshalber in den Daten auf deutsche Sonderzeichen verzichtet. Die bereinigten CSV-Daten habe ich “inline” eingegeben und dann lief die Visualisierung fehlerfrei."
  },
  {
    "objectID": "posts/sonntagsfrage/index.html#erkenntnisse-aus-den-daten",
    "href": "posts/sonntagsfrage/index.html#erkenntnisse-aus-den-daten",
    "title": "Grafana-Dashboard zur Sonntagsfrage",
    "section": "Erkenntnisse aus den Daten",
    "text": "Erkenntnisse aus den Daten\nSeit der Bundestagswahl 2021 haben sich die Zustimmungswerte der Parteien in den Sonntagsfragen teils deutlich verändert. Ein Blick auf die Umfragereihen liefert ein spannendes Bild der aktuellen politischen Stimmung in Deutschland:\n\nAusgangslage: Wahlergebnis als Startpunkt\nDie Datenreihen setzen jeweils bei den real erzielten Stimmanteilen der Bundestagswahl 2021 an, bevor sie in die fortlaufenden Umfragewerte übergehen. Dadurch wird deutlich, in welchem Maße sich die Zustimmung für jede Partei seit der Wahl verändert hat.\n\n\nDeutliche Verluste bei den Regierungsparteien\nVergleicht man die aktuellen Umfragewerte mit den Wahlergebnissen, wird klar, dass alle Regierungsparteien (SPD, Grüne und FDP) mehr oder weniger stark an Zustimmung eingebüßt haben. Dabei fällt vor allem auf:\n\nSPD: War 2021 noch Wahlsiegerin, liegt heute jedoch spürbar hinter ihren ursprünglichen Wahlwerten zurück.\nGrüne: Konnten zeitweise Zugewinne verbuchen (insbesondere in Krisenzeiten wie zu Beginn des Ukraine-Kriegs), sanken dann aber wieder ab.\nFDP: Spürt im Vergleich zu ihrem Wahlergebnis einen besonders starken Abschwung, vor allem nachdem zentrale FDP-Forderungen in der Ampelkoalition nicht wie erhofft umgesetzt wurden.\n\n\n\nCDU/CSU: Wechselseitige Dynamik mit der AfD\nDie Union konnte anfangs von der Unzufriedenheit mit der Ampelkoalition profitieren und deutlich zulegen. Im weiteren Zeitverlauf ist allerdings eine auffällige Pendelbewegung zwischen CDU/CSU und AfD zu erkennen:\n\nSteigt die AfD, fällt in derselben Phase häufig die Union.\nVerbessert sich die CDU/CSU, verliert die AfD wieder etwas. Diese gegenläufige Entwicklung könnte darauf hindeuten, dass in Teilen ähnliche Wählerschichten angesprochen werden, die zwischen den beiden Parteien wechseln.\n\n\n\n\nAfD: Kontinuierlicher Aufwärtstrend\nDie AfD hat in den meisten Umfragen seit der Wahl zugelegt und profitiert offenbar davon, wenn die Zufriedenheit mit den etablierten Parteien sinkt. Bei Themen wie Inflation, Energiekrise oder Flüchtlingspolitik hat die AfD offenbar Wählerinnen und Wähler mobilisieren können, die zuvor entweder der Union oder dem Nichtwählerlager zugeneigt waren.\n\n\nLinke und kleinere Parteien\nDie Linke pendelt in den Umfragen zumeist nur knapp über der Fünf-Prozent-Hürde. Sie hat in den letzten Jahren an Profil eingebüßt und scheint bislang nicht stark von der aktuellen Unzufriedenheit mit der Regierung zu profitieren. Weitere kleine Parteien (z.B. BSW oder Sonstige) liegen mehrheitlich stabil auf niedrigem Niveau. Einzelne Ausschläge nach oben sind selten und eher von kurzfristigen Ereignissen abhängig."
  },
  {
    "objectID": "posts/sonntagsfrage/index.html#fazit",
    "href": "posts/sonntagsfrage/index.html#fazit",
    "title": "Grafana-Dashboard zur Sonntagsfrage",
    "section": "Fazit",
    "text": "Fazit\nMit Grafana lassen sich nicht nur technische oder wirtschaftliche Daten visualisieren, sondern auch politische Entwicklungen. Die Daten seit der Bundestagswahl 2021 machen deutlich, dass die Regierungsparteien aktuell unter Druck stehen und teils kräftig in den Umfragen verloren haben. Während die CDU/CSU zunächst auf Kosten der Ampelparteien zulegen konnte, teilt sie sich mittlerweile offenbar ein ähnliches Wählerreservoir mit der AfD: Steigt die eine Partei, verliert die andere. Diese Tendenz wird allerdings bei den letzten Umfragen im Februar 2025 durchbrochen, wo beide Parteien in den Umfragen zulegten. Insgesamt deuten die Umfragen auf eine stark polarisierte politische Stimmung hin, in der populistische Positionen momentan eher an Zustimmung gewinnen als sachpolitische Regierungsarbeit.\n."
  }
]